---
import type { ImageMetadata } from 'astro';
import { Image } from 'astro:assets';

interface Link {
  title: string;
  href: string;
}

interface Props {
  title: string;
  href: string;
  image?: ImageMetadata | string;
  links?: Link[];
}

const { title, href, image, links = [] } = Astro.props;
---

<div
  class="grid rounded-lg shadow-lg overflow-hidden transition-shadow hover:shadow-xl cursor-pointer"
  style="grid-template-columns: 1.5fr 3fr"
>
  <div class="relative">
    {
      image && (
        <a href={href}>
          {typeof image === 'string' ? (
            <img src={image} alt="" class="object-cover w-full h-full" />
          ) : (
            <Image src={image} alt="" class="h-full w-full object-cover object-center" role="presentation" />
          )}
        </a>
      )
    }
    <div class="absolute inset-0 bg-gradient-to-t from-black/80 via-black/40 to-transparent"></div>
  </div>

  <div class="p-2 pb-4">
    <a href={href}>
      <h2 class="text-md font-semibold mb-2 hover:text-blue-600 transition-colors">
        {title}
      </h2>
    </a>
    {
      links.length > 0 && (
        <ul class="space-y-1.5 max-h-[150px] overflow-y-auto scrollbar-thin scrollbar-thumb-gray-400 scrollbar-track-transparent">
          {links.map((link) => (
            <li>
              <a href={link.href} class="block text-sm hover:text-blue-600 transition-colors">
                {link.title}
              </a>
            </li>
          ))}
        </ul>
      )
    }
  </div>
</div>
