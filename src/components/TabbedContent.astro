---
interface Props {
  tabs: string[];
  defaultActive: number;
}

const { tabs, defaultActive } = Astro.props;
---

<div class="flex flex-col">
  <div class="flex flex-col place-content-center gap-2 mb-4 md:flex-row md:gap-4">
    {
      tabs.map((tab, index) => (
        <button
          data-tab={index}
          data-active={defaultActive === index}
          class="px-4 py-2 text-sm font-medium text-gray-700 rounded-lg focus:outline-none tab-button"
        >
          {tab}
        </button>
      ))
    }
  </div>
  <slot />
</div>
<script>
  const updateState = () => {
    const buttons = document.querySelectorAll('.tab-button');
    const panels = document.querySelectorAll('.tab-panel');

    buttons.forEach((button) => {
      if (button.getAttribute('data-active') === 'true') {
        button.classList.add('bg-gray-200');

        panels.forEach((panel) => {
          if (panel.getAttribute('data-panel') !== button.getAttribute('data-tab')) {
            panel.classList.add('hidden');
          } else {
            panel.classList.remove('hidden');
          }
        });
      }

      button.addEventListener('click', () => {
        buttons.forEach((b) => b.classList.remove('bg-gray-200'));
        button.classList.add('bg-gray-200');

        panels.forEach((panel) => {
          panel.classList.remove('hidden');

          if (panel.getAttribute('data-panel') !== button.getAttribute('data-tab')) {
            panel.classList.add('hidden');
          }
        });
      });
    });
  };

  updateState();
</script>
